Given: array



public class Main {

	public static int largestRectangleArea(int[] h) {

		int max = 0;

		int n = h.length;

		int[] left = new int[n];
		int[] right = new int[n];

		Stack<Integer> stack = new Stack<>();

		for(int i=0;i<n;i++)
		{
			if(stack.isEmpty() == true){
				left[i] = 0;
				stack.push(i);
			}
			else{
				while(stack.isEmpty() == false && h[stack.peek()] >= h[i]){
					stack.pop();
				}

				left[i] = stack.isEmpty()==true?0:stack.peek()+1;
				stack.push(i);
			}
		}

		while(stack.isEmpty() == false)
			stack.pop();
        
		for(int i=n-1;i>=0;i--)
		{
			if(stack.isEmpty() == true)
			{
				right[i] = n-1;
				stack.push(i);
			}
			else{
				while(stack.isEmpty() == false && h[stack.peek()] >= h[i])
					stack.pop();
				
				right[i] = stack.isEmpty()==true?n-1:stack.peek()-1;
				stack.push(i);
			}
		}

		for(int i=0;i<n;i++)
		{
			max = Math.max(max,h[i] * (right[i]-left[i]+1));
		}
        return max;
    }

	public static void main(String[] args) {

		int[] arr = {2,1,5,6,2,3};

		System.out.println(largestRectangleArea(arr));
		
		
	}

}
