Given a singly linked list of size N. The task is to rotate the linked list counter-clockwise by k nodes, where k is a given positive integer smaller than or equal to length of the linked list.

Example 1:

Input:
N = 5
value[] = {2, 4, 7, 8, 9}
k = 3
Output: 8 9 2 4 7
Explanation:
Rotate 1: 4 -> 7 -> 8 -> 9 -> 2
Rotate 2: 7 -> 8 -> 9 -> 2 -> 4
Rotate 3: 8 -> 9 -> 2 -> 4 -> 7



solution:-

class Solution{
    //Function to rotate a linked list.
    public Node rotate(Node head, int k) {
        // add code here
        
        if(head.next == null)
            return head;
        
        Node tail = head;
        
        while(tail.next != null)
        {
            tail = tail.next;
        }
        
        for(int i=1;i<=k;i++)
        {
            Node temp = head;
            
            head = head.next;
            temp.next = null;
            tail.next = temp;
            tail = temp;
        }
        
        return head;
        
    }
}
