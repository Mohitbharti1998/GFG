Given a number N. Find the length of the longest consecutive 1s in its binary representation.

Example 1:

Input: N = 14
Output: 3
Explanation: 
Binary representation of 14 is 
1110, in which 111 is the longest 
consecutive set bits of length is 3.
Example 2:

Input: N = 222
Output: 4
Explanation: 
Binary representation of 222 is 
11011110, in which 1111 is the 
longest consecutive set bits of length 4.

Expected Time Complexity: O(log N).
Expected Auxiliary Space: O(1).



class Solution{
    
    /*  Function to calculate the longest consecutive ones
    *   N: given input to calculate the longest consecutive ones
    */
    public static int maxConsecutiveOnes(int n) {
        
        // Your code here
        
        int binary[] = new int[40];    
        int index = 0;    
        while(n > 0){    
            binary[index++] = n%2;    
            n = n/2;    
        }   
        
        int max = 0;
        
        int count = 0;
        
        for(int i=index-1;i>=0;i--)
        {
            if(binary[i] == 1)
                count++;
            else
            {
                if(max <= count)
                {
                    max = count;
                    
                }
                count = 0;
            }
        }
        if(max <= count)
            max = count;
        return max;
        
    }
    
    //Second method
    public static int maxConsecutiveOnes(int n)
    {
        int count=0;
        while(n!=0)
        {
            n = n & (n << 1);
            count++;
        }
        
        return count;
        
    }
}
