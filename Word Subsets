We are given two arrays A and B of words.  Each word is a string of lowercase letters.

Now, say that word b is a subset of word a if every letter in b occurs in a, including multiplicity.  For example, "wrr" is a subset of "warrior", but is not a subset of "world".

Now say a word a from A is universal if for every b in B, b is a subset of a. 

Return a list of all universal words in A.  You can return the words in any order.



Example 1:

Input: A = ["amazon","apple","facebook","google","leetcode"], B = ["e","o"]
Output: ["facebook","google","leetcode"]
Example 2:

Input: A = ["amazon","apple","facebook","google","leetcode"], B = ["l","e"]
Output: ["apple","google","leetcode"]
Example 3:

Input: A = ["amazon","apple","facebook","google","leetcode"], B = ["e","oo"]
Output: ["facebook","google"]
Example 4:

Input: A = ["amazon","apple","facebook","google","leetcode"], B = ["lo","eo"]
Output: ["google","leetcode"]
Example 5:

Input: A = ["amazon","apple","facebook","google","leetcode"], B = ["ec","oc","ceo"]
Output: ["facebook","leetcode"]



class Solution {
    
    public int[] get_char_frequency(String str)
    {
        int[] alpha = new int[26];
        
        char[] charArr = str.toCharArray();
        
        for(char c : charArr)
        {
           //alpha[c - 'a'] = alpha[c - 'a'] + 1;
           alpha[c -'a']++; //above expression in simplest way
            
        }
        return alpha;
    }
    
    
    public List<String> wordSubsets(String[] A, String[] B) {
        
        ArrayList<String> list = new ArrayList<>();
        
        int[] max_frequencies = new int[26];
        
        for(int i=0;i<B.length;i++)
        {
            String str = B[i];
            
            int[] aplha_frequencies = get_char_frequency(str);
            
            for(int j=0;j<26;j++)
                max_frequencies[j] = Math.max(max_frequencies[j],aplha_frequencies[j]);
        }
        
        
        for(int i=0;i<A.length;i++)
        {
            String str = A[i];
            
            int[] apha_count = get_char_frequency(str);
            
            boolean valid = true;
            
            for(int j=0;j<26;j++)
            {
                if(max_frequencies[j] > apha_count[j])
                {
                    valid = false;
                    break;
                }
                    
            }
            
            if(valid)
            {
                list.add(str);
            }
        }
    
        return list;
    }
}
